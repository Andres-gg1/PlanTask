{% extends "layout.jinja2" %}

{% block title %}Chats{% endblock %}

{% block styles %}
<link href="{{ request.static_url('plantask:static/styles/chats.css') }}" rel="stylesheet">
{% endblock %}

{% block content %}
<div class="main-layout">
  <main class="mycontainer" style="display: flex;">
    <aside class="left-sidebar">
      <h1 style="margin-bottom: 1rem;">My Chats</h1> 
      <div class="search-container">
        <input type="text" id="chats-search" class="chats-search" placeholder="Filter by name">
        <i class="bi-search search-icon"></i>
      </div>
      <div class="chats-scroll-area">
        {% if chats %}
        <ul class="list-group mb-4" id="chats-list">
          {% for f in chats %}
          <li class="list-group-item justify-content-between align-items-center chat-item" 
              data-first-name="{{ f.first_name | lower }}" 
              data-last-name="{{ f.last_name | lower }}" 
              data-username="{{ f.username | lower }}">
            <div style="cursor:pointer;">
              {% if f.image_route %}
                  <img src="{{ f.image_route }}" 
                  alt="Profile Picture" 
                  style="width: 2.5rem; height: 2.5rem; border-radius: 50%; object-fit: cover; display: inline-block; margin-right :1rem;">
              {% else %}
                  <img src="{{ request.static_url('plantask:static/default_pfp.svg') }}" 
                  alt="Default Profile Picture" 
                  style="width: 2.5rem; height: 2.5rem; border-radius: 50%; object-fit: cover; display: inline-block; margin-right :1rem;">
              {% endif %}
              <div style="display:flex; flex-direction:column; flex:2; min-width:0;">
                <strong style="word-break: break-all; white-space: normal;">{{ f.first_name }} {{f.last_name}}</strong>
                <small class="text-muted">@{{ f.username }}</small>
              </div>
            </div>
          </li>
          {% endfor %}
        </ul>
        {% else %}
        <ul class="list-group mb-4">
          <li class="list-group-item justify-content-between align-items-center">
            <div class="chat-item" style="cursor:pointer;">
              <i class="bi-person-circle fs-1"></i>
              <div style="display:flex; flex-direction:column; flex:2; min-width:0;">
                <strong style="word-break: break-all; white-space: normal;">Andres Garcia</strong>
              </div>
            </div>
          </li>
        </ul>
        {% endif %}
      </div>
    </aside>
    <section class="chat-messages" style="flex: 1 1 0; min-width: 0; display: flex; flex-direction: column;">
      <div class="ChatInfo">
        <i class="bi-person-circle fs-1"></i>
        <h4 style="margin: 0 1rem; flex: 1;">Username</h4>
        <i class="bi-three-dots-vertical fs-1" style="margin-left: auto; margin-right:0.5rem"></i>
      </div>
      <div class="messages">
        <div class="mymessage">
          <p style="margin-bottom: 0">DateTime</p>
          <p class="mymessagebubble">
            Our life's work is to help people improve their lives by making and innovating products and services our customers value.
          </p>
          <i class="bi-check2-all"></i>
        </div>
        <div class="amessage">
          <p style="margin-bottom: 0">DateTime</p>
          <p class="amessagebubble">
            Our life's work is to help people improve their lives by making and innovating products and services our customers value.
          </p>
        </div>
      </div>
      <div class="chat-input-bar">
        <i class="bi-person-circle user-icon"></i>
        <input type="text" class="chat-input" placeholder="Write a message" />
        <i class="bi-paperclip attach-icon"></i>
        <button class="send-button">
          Send <i class="bi-send"></i>
        </button>
      </div>
    </section>
  </main>
</div>
{% endblock %}

{% block scripts %}
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const messagesContainer = document.querySelector('.messages');

    function scrollToBottom() {
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    // Scroll to the bottom on page load
    scrollToBottom();

    // Scroll to the bottom when new messages are added
    const observer = new MutationObserver(() => {
      scrollToBottom();
    });
    observer.observe(messagesContainer, { childList: true, subtree: true });

    // Optional: Scroll to the bottom when the input field is focused
    const chatInput = document.querySelector('.chat-input');
    chatInput.addEventListener('focus', scrollToBottom);
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('chats-search');
    const chatItems = document.querySelectorAll('.chat-item');

    searchInput.addEventListener('input', () => {
      const filter = searchInput.value.toLowerCase();

      chatItems.forEach(item => {
        const firstName = item.getAttribute('data-first-name');
        const lastName = item.getAttribute('data-last-name');
        const username = item.getAttribute('data-username');

        if (
          firstName.includes(filter) || 
          lastName.includes(filter) || 
          username.includes(filter)
        ) {
          item.style.display = 'flex'; // Show matching items
        } else {
          item.style.display = 'none'; // Hide non-matching items
        }
      });
    });
  });
</script>
{% endblock %}