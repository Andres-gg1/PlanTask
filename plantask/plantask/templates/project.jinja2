{% extends "layout.jinja2" %}

{% block title %}{{ project.name | default('Project') }}{% endblock %}

{% block styles %}
<link rel="stylesheet" href="{{ request.static_url('plantask:static/styles/projects.css') }}">
<link href="https://fonts.cdnfonts.com/css/proxima-nova-2" rel="stylesheet">
<link rel="stylesheet" href="{{ request.static_url('plantask:static/styles/kanban_task.css') }}">
{% endblock %}

{% block content %}
<div class="banner" style="background-image: url('{{ request.static_url('plantask:static/img_example.jpg') }}');"></div>
<main class="mycontainer" style="margin-top: 1rem;">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start gap-3">
        <div class="d-flex align-items-center">
            <div>
                <h1>{{ project.name if project and project.name else 'My New Project' }}</h1>
                <p class="description" id="projectDescription">{{ project.description | default('No description available') }}</p>
                {% if project.description and project.description|length > 200 %}
                    <span class="read-more-btn" id="readMoreBtn">Read More</span>
                {% endif %}
            </div>
        </div>
        {% for f in flashes %}
            <div class="alert alert-{{ f.style }} announcement" role="alert">
                {{ f.message }}
            </div>
        {% endfor %}
         {% if role == 'admin' %}

        {% endif %}
        <div class="dropdown">
            <button class="mybtn btn btn-secondary" type="button" id="membersDropdown" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="false">
                Members ({{ project_members|length }}) 
                <i class="bi-people"></i>
                <i class="bi-chevron-down" id="dropdownIcon"></i>
            </button>
            <ul class="dropdown-menu p-3 smooth-dropdown" aria-labelledby="membersDropdown" style="width: 22rem;">
                {% for member, show_role in project_members %}
                <li class="mb-3">
                    <div class="card shadow-sm border-0">
                        <div class="card-body d-flex align-items-start justify-content-between">
                            <div class="d-flex">
                                <i class="bi-person-circle fs-3 text-primary me-3"></i>
                                <div>
                                    <h6 class="card-title mb-1">{{ member.first_name }} {{ member.last_name }}</h6>
                                    <p class="card-text mb-1 text-muted">@{{ member.username }}</p>
                                    <small class="text-secondary">{{ show_role }}</small>
                                </div>
                            </div>
                            {% if role == 'admin' and member.id != request.session.get('user_id') %}
                            <form method="POST" action="{{ request.route_url('remove_member', id=project.id) }}" class="remove-member-form" data-member-name="{{ member.first_name }} {{ member.last_name }}">
                                <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                                <input type="hidden" name="user_id" value="{{ member.id }}">
                                <button type="submit" class="btn btn-outline-danger btn-sm" title="Remove member">
                                    <i class="bi-person-dash"></i>
                                </button>
                            </form>
                            {% endif %}
                        </div>
                    </div>
                </li>
                {% endfor %}
            </ul>
        </div>
    </div>

    <div class="content-row mt-3">
        {% if role == 'admin' %}
        <div class="admin-actions mb-3">
            <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#editProjectModal">Edit Project <i class="bi-pencil-square"></i></button>
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteProjectModal">Delete Project <i class="bi-trash3"></i></button>
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addMemberModal">Add Member <i class="bi-person-add"></i></button>
            <button class="addlbbtn btn" type="button" data-bs-toggle="modal" data-bs-target="#addLabelModal" aria-label="Add Label" title="Add Label"><i class="bi-plus-lg"></i></button>
        </div>
        {% endif %}
    </div>

    <!-- Kanban Board -->
    <div id="kanban-board-wrapper">
        {% include "kanban.jinja2" %}
    </div>
    {% if role == 'admin' %}
        <a href="{{ request.route_url('create_task', project_id=project.id) }}" class="create-task-button">
            Create New Task <i class="bi-plus-lg"></i>
        </a>
    {% endif %}
</main>
<div class="modal fade" id="confirmRemoveMemberModal" tabindex="-1" aria-labelledby="confirmRemoveMemberModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmRemoveMemberModalLabel">Confirm Remove</h5>
      </div>
      <div class="modal-body">
        <p id="removeMemberMessage">Are you sure you want to remove this member?</p>
      </div>
      <div class="modal-footer border-0">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button id="confirmRemoveBtn" type="button" class="btn btn-danger">Remove</button>
      </div>
    </div>
  </div>
</div>

{% include "labels_modal.jinja2" %}

<!-- Edit Project Modal -->
<div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="POST" action="{{ request.route_url('edit_project', id=project.id) }}">
                <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProjectModalLabel">Edit Project</h5>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="projectName" class="form-label">Project Name</label>
                        <input type="text" class="form-control" id="projectName" name="name" value="{{ project.name }}">
                    </div>
                    <div class="mb-3">
                        <label for="projectDescription" class="form-label">Project Description</label>
                        <textarea class="form-control" id="projectDescription" name="description">{{ project.description }}</textarea>
                    </div>
                    <div class="mb-3">
                        <label for="projectImage" class="form-label">Project Image</label>
                        <input type="file" name="file" class="form-control" id="projectImage" required>
                        <input type="hidden" name="project_id" value="{{ project.id }}">
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-info">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Project Modal -->
<div class="modal fade" id="deleteProjectModal" tabindex="-1" aria-labelledby="deleteProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteProjectModalLabel">Delete Project</h5>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the project "{{ project.name }}"?
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <a href="{{ request.route_url('delete_project', id=project.id) }}" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

<!-- Add member to Project Modal -->
<div class="modal fade" id="addMemberModal" tabindex="-1" aria-labelledby="addMemberModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="addMemberForm" method="POST" action="{{ request.route_url('add_member', id=project.id) }}">
                <input type="hidden" name="csrf_token" value="{{ csrf_token }}">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMemberModalLabel">Add Members</h5>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="usernameSearch" class="form-label">Search for users by username</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="usernameSearch" placeholder="Search..." autocomplete="off">
                            <button class="btn btn-outline-secondary" type="button" onclick="searchUsers()">Search</button>
                        </div>
                        <small class="form-text text-muted">Type at least 2 characters to search</small>
                    </div>
                    
                    <div id="userSearchResults" class="mb-3">
                    </div>

                    <div class="mb-3">
                        <h6>Selected Users</h6>
                        <ul id="selectedUsersList" class="list-group">
                        </ul>
                    </div>
                    <div id="hiddenInputsContainer">
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success" id="addMembersBtn">Add Members</button>
                </div>
            </form>
        </div>
    </div>
</div>

{% endblock content %}

{% block scripts %}
<script src="{{ request.static_url('plantask:static/scripts/project.js') }}"></script>
<script>
function setupKanbanDragAndDrop() {
    const cards = document.querySelectorAll('[draggable="true"]');
    const columns = document.querySelectorAll('.kanban-tasks');

    let draggedCard = null;

    cards.forEach(card => {
        card.addEventListener('dragstart', (e) => {
            draggedCard = card;
            e.dataTransfer.setData('text/plain', card.dataset.taskId);
        });
    });

    columns.forEach(column => {
        column.addEventListener('dragover', (e) => {
            e.preventDefault();
        });

        column.addEventListener('drop', async (e) => {
            e.preventDefault();

            const newStatus = column.closest('.kanban-column').dataset.status;
            const taskId = e.dataTransfer.getData('text/plain');

            const card = document.querySelector(`[data-task-id="${taskId}"]`);
            if (card && column !== card.parentElement) {
                column.appendChild(card); // Move instantly

                try {
                    const response = await fetch('{{ request.route_url("update_task_status") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRFToken': '{{ csrf_token }}'
                        },
                        body: JSON.stringify({
                            task_id: taskId,
                            new_status: newStatus
                        })
                    });

                    // Always reload Kanban after update
                    const kanbanResponse = await fetch('{{ request.route_url("kanban_partial", id=project.id) }}');
                    if (kanbanResponse.ok) {
                        const kanbanHtml = await kanbanResponse.text();
                        document.getElementById('kanban-board-wrapper').innerHTML = kanbanHtml;
                        setupKanbanDragAndDrop();
                    } else {
                        location.reload();
                    }
                } catch (err) {
                    alert("Error updating task status. Reloading board...");
                    location.reload();
                }
            }
        });
    });
}

document.addEventListener('DOMContentLoaded', setupKanbanDragAndDrop);
</script>
{% endblock %}
